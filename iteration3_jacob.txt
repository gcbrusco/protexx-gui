import 'dart:async';

import 'package:flutter/material.dart';


void main(){
  runApp(
    MaterialApp(
      title: "TEST",
      initialRoute: '/',
      routes: {
        '/'       : (BuildContext context) => S1Page(),
        '/test'   : (BuildContext context) => TestPage(),
        '/compare': (BuildContext context) => ComparePage(),
      },
    ),
  );
}

class S1Page extends StatefulWidget{
  S1 createState()=> S1();
}
  class S1 extends State<S1Page> {
    int dropdownValue = 10;
    @override
    Widget build(BuildContext context) {
      return MaterialApp(
        theme: new ThemeData(scaffoldBackgroundColor: const Color(0xFFFF)),
        home:
          Scaffold(
            appBar: AppBar(
              title: Text('Protxx App'),
              backgroundColor: Colors.red,
              actions: <Widget>[IconButton(
                icon: const Icon(Icons.home),
                onPressed: () {
                  //TODO: CHANGE TO HOME SCREEN
                  Navigator.of(context).pushNamed(
                  "/"
                  );
                }
              ),
              ]


      ),

            body: Column(
              children: [
                Container(
                  padding: const EdgeInsets.all(8),
                  alignment: Alignment.topCenter,
                  child: Text(
                    "Try It Yourself!",
                    style: TextStyle(
                      color: Colors.white, fontSize: 40,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
                Container(
                  padding: const EdgeInsets.all(5),
                  child: Text(
                    "Please select a length of time (seconds)",
                    style: TextStyle(
                      color: Colors.white, fontSize: 22,
                    ),
                  ),
                ),
                Container(
                  padding: const EdgeInsets.all(50),
                  child: DropdownButton(
                    icon: const Icon(Icons.arrow_downward, color: Colors.white,),
                    iconSize: 34,
                    dropdownColor: Colors.red,
                    style: const TextStyle(color: Colors.white, fontSize: 30),
                    value: dropdownValue,
                    onChanged: (int newValue) {
                      setState((){
                        dropdownValue = newValue;
                      });
                    },

                    items: <int>[10, 15, 20, 25, 30].map((int value) {
                      return new DropdownMenuItem<int>(
                        value: value,
                        child: new Text(value.toString()),
                      );
                    }).toList(),
                  )
                ),
                Container(
                  padding: const EdgeInsets.all(100),
                  child: ElevatedButton(
                    style: ElevatedButton.styleFrom(
                      primary: Colors.red,
                      shape: const BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(5))),
                      minimumSize: Size(100, 50),
                    ),
                    child: Text('Continue', style: TextStyle(fontSize: 30, color: Colors.white),),
                    onPressed: () {
                      Navigator.of(context).pushNamed(
                          '/test',
                          arguments: dropdownValue,
                      );
                    },
                  ),
                ),
              ]
            ),
          ),
      );
    }
  }



  class TestPage extends StatefulWidget{
    Test createState()=> Test();
  }

  class Test extends State<TestPage> {
  int selection;

  @override
  void didChangeDependencies(){
    super.didChangeDependencies();
    selection = ModalRoute.of(context).settings.arguments;
  }



    Timer _timer;


    void _startTimer() {

      if (_timer != null) {
        _timer.cancel();
      }
      _timer = Timer.periodic(Duration(seconds: 1), (timer) {
        setState(() {
          if (selection > 0) {
            selection--;
          } else {
            _timer.cancel();
          }
        });
      });
    }

    @override
    Widget build(BuildContext context) {
      return MaterialApp(
        theme: new ThemeData(scaffoldBackgroundColor: const Color(0xFFFF)),
        home:
        Scaffold(
          appBar: AppBar(
              title: Text('Protxx App'),
              backgroundColor: Colors.red,
              actions: <Widget>[IconButton(
                  icon: const Icon(Icons.home),
                  onPressed: () {
                    //TODO: CHANGE TO HOME SCREEN
                    Navigator.of(context).pushNamed(
                        "/"
                    );
                  }
              ),
              ]
          ),
          body: Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                (selection > 0)
                    ? Text("")
                    : Text(
                  "DONE!",
                  style: TextStyle(
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                    fontSize: 48,
                  ),
                ),
                Text(
                  '$selection',
                  style: TextStyle(
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                    fontSize: 48,
                  ),
                ),
                (selection > 0)
                      ? ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    primary: Colors.red,
                    shape: const BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(5))),
                    minimumSize: Size(30,30),
                  ),
                  onPressed: () => _startTimer(),
                  child: Text("Begin Test"),
                )
                      : ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    primary: Colors.red,
                    shape: const BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(5))),
                    minimumSize: Size(30,30),
                  ),
                  onPressed: () {
                    //TODO: CHANGE TO PREVIOUS TEST PAGE
                    Navigator.of(context).pushNamed(
                      '/compare',
                    );
                  },
                  child: Text("See Results"),
                )


              ],
            ),
          ),
        ),
      );
    }
  }


  class ComparePage extends StatefulWidget{
    Compare createState()=> Compare();
  }

  class Compare extends State<ComparePage> {
    String gender = 'Male';
    int age = 0;
    String condition = 'Concussion';
    int severity = 0;
    bool eyesOpen = true;

    void changeRadioValue(String value)
    {
      setState(() {
        gender = value;
      });
    }

    void changeAgeValue(double value)
    {
        setState(() {
          age = value.round();
        });
    }

    void changeSeverityValue(double value)
    {
      setState(() {
        severity = value.round();
      });
    }

    void changeVisionCondition(bool value)
    {
      setState(() {
        eyesOpen = value;
      });
    }

    @override
    Widget build(BuildContext context) {
      return MaterialApp(
          theme: new ThemeData(scaffoldBackgroundColor: const Color(0xFFFF), unselectedWidgetColor: Colors.red),
          home:
          Scaffold(
              appBar: AppBar(
                  title: Text('Protxx App'),
                  backgroundColor: Colors.red,
                  actions: <Widget>[IconButton(
                      icon: const Icon(Icons.home),
                      onPressed: () {
                        //TODO: CHANGE TO HOME SCREEN
                        Navigator.of(context).pushNamed(
                            "/"
                        );
                      }
                  ),
                  ]
              ),
              body: Center(
                  child: Column(
                      children: <Widget>[
                        Container(
                          padding: const EdgeInsets.only(top: 15),
                        child: Text("Choose Mock Test Options:", style: TextStyle(
                          color: Colors.white,
                          fontWeight: FontWeight.bold,
                          fontSize: 30,
                          ),
                          textAlign: TextAlign.center,
                        ),
                        ),
                        Container(
                          padding: const EdgeInsets.only(top:20),
                          child: Text("Select a gender: ", style: TextStyle(
                            color: Colors.white,
                            fontWeight: FontWeight.bold,
                            fontSize: 16,
                        ), ),
                        ),

                        Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                            children: <Widget>[
                              Radio(
                                value: 'Male',
                                groupValue: gender,
                                activeColor: Colors.red,
                                onChanged: changeRadioValue,
                              ),
                              Text('Male', style: TextStyle(
                                color: Colors.white,
                                fontSize: 16,
                              ),),
                              Radio(
                                value: 'Female',
                                groupValue: gender,
                                activeColor: Colors.red,
                                onChanged: changeRadioValue,
                              ),
                              Text('Female', style: TextStyle(
                                color: Colors.white,
                                fontSize: 16,
                                ),
                              )
                            ]
                        ),

                        Container(
                          padding: const EdgeInsets.only(top:20),
                          child: Text("Age: ", style: TextStyle(
                            color: Colors.white,
                            fontSize: 16,
                            fontWeight: FontWeight.bold,
                            ),
                        ),
                        ),
                        Slider(
                          activeColor: Colors.red,
                          inactiveColor: Colors.grey,
                          value: age.toDouble(),
                          min: 0,
                          max: 150,
                          divisions: 150,
                          label: age.round().toString(),
                          onChanged: changeAgeValue,
                        ),
                        Container(
                          padding: const EdgeInsets.only(top:20),
                          child: Text('Neurological Condition: ', style: TextStyle(
                          color: Colors.white,
                          fontSize: 16,
                          fontWeight: FontWeight.bold,
                          ),
                        ),
                        ),

                        DropdownButton(
                          icon: const Icon(Icons.arrow_downward, color: Colors.white,),
                          iconSize: 20,
                          dropdownColor: Colors.red,
                          style: const TextStyle(color: Colors.white, fontSize: 20),
                          value: condition,
                          onChanged: (String value) {
                            setState(() {
                              condition = value;
                            });
                          },
                          items: <String>['Concussion', 'Condition 2', 'Condition 3', 'Condition 4', 'Condition 5'].map((String value) {
                            return new DropdownMenuItem<String>(
                              value: value,
                              child: new Text(value),
                            );
                          }).toList(),
                        ),
                        Container(
                          padding: const EdgeInsets.only(top:20),
                          child: Text("Severity: ", style: TextStyle(
                            color: Colors.white,
                            fontSize: 16,
                            fontWeight: FontWeight.bold,
                            ),
                          ),
                        ),
                        Slider(
                          activeColor: Colors.red,
                          inactiveColor: Colors.grey,
                          value: severity.toDouble(),
                          min: 0,
                          max: 10,
                          divisions: 10,
                          label: severity.round().toString(),
                          onChanged: changeSeverityValue,
                        ),

                        Container(
                          padding: const EdgeInsets.only(top:20),
                          child: Text("Vision status:", style: TextStyle(
                            color: Colors.white,
                            fontSize: 16,
                            fontWeight: FontWeight.bold,
                        ),),
                        ),

                        Row(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: <Widget>[
                              Radio(
                                value: true,
                                groupValue: eyesOpen,
                                onChanged: changeVisionCondition,
                              ),
                              Text('Eyes open', style: TextStyle(
                                color: Colors.white,
                                fontSize: 16,
                              ),),
                              Radio(
                                value: false,
                                groupValue: eyesOpen,
                                onChanged: changeVisionCondition,
                              ),
                              Text('Eyes closed', style: TextStyle(
                                color: Colors.white,
                                fontSize: 16,
                              ),),
                            ]
                        ),
                        Container(
                          padding: const EdgeInsets.only(top:20),
                          child: ElevatedButton(
                          style: ElevatedButton.styleFrom(
                            primary: Colors.red,
                            shape: const BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(5))),
                            minimumSize: Size(30,30),
                          ),
                          //TODO: COMPARISON PAGE
                          onPressed: () {
                            Navigator.of(context).pushNamed(
                              '/compare',
                            );
                          },


                          child: Text("Continue"),
                        ),),
                      ]
                  )
              )
          )
      );
    }

  }
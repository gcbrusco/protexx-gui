import 'dart:async';

import 'package:flutter/material.dart';


void main(){
  runApp(
    MaterialApp(
      title: "TEST",
      initialRoute: '/',
      routes: {
        '/' : (BuildContext context) => S1Page(),
        '/second': (BuildContext context) => TestPage(),
      },
    ),
  );
}

class S1Page extends StatefulWidget{
  S1 createState()=> S1();
}
  class S1 extends State<S1Page> {
    int dropdownValue = 10;
    @override
    Widget build(BuildContext context) {
      return MaterialApp(
        theme: new ThemeData(scaffoldBackgroundColor: const Color(0xFFFF)),
        home:
          Scaffold(
            appBar: AppBar(
              title: Text('Protxx App'),
              backgroundColor: Colors.red
            ),

            body: Column(
              children: [
                Container(
                  padding: const EdgeInsets.all(8),
                  alignment: Alignment.topCenter,
                  child: Text(
                    "Try It Yourself!",
                    style: TextStyle(
                      color: Colors.white, fontSize: 40,
                    ),
                  ),
                ),
                Container(
                  padding: const EdgeInsets.all(5),
                  child: Text(
                    "Please select a length of time (seconds)",
                    style: TextStyle(
                      color: Colors.white, fontSize: 22,
                    ),
                  ),
                ),
                Container(
                  padding: const EdgeInsets.all(50),
                  child: DropdownButton(
                    icon: const Icon(Icons.arrow_downward, color: Colors.white,),
                    iconSize: 34,
                    dropdownColor: Colors.red,
                    style: const TextStyle(color: Colors.white, fontSize: 30),
                    value: dropdownValue,
                    onChanged: (int newValue) {
                      setState((){
                        dropdownValue = newValue;
                      });
                    },

                    items: <int>[10, 15, 20, 25, 30].map((int value) {
                      return new DropdownMenuItem<int>(
                        value: value,
                        child: new Text(value.toString()),
                      );
                    }).toList(),
                  )
                ),
                Container(
                  padding: const EdgeInsets.all(100),
                  child: ElevatedButton(
                    style: ElevatedButton.styleFrom(
                      primary: Colors.red,
                      shape: const BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(5))),
                      minimumSize: Size(100, 50),
                    ),
                    child: Text('Continue', style: TextStyle(fontSize: 30, color: Colors.white),),
                    onPressed: () {
                      //TODO GO TO TIMER PAGE
                      Navigator.of(context).pushNamed(
                          '/second',
                          arguments: dropdownValue,
                      );
                    },
                  ),
                ),
                Container(
                  alignment: Alignment.bottomLeft,
                  padding: const EdgeInsets.all(5),
                  child: ElevatedButton(
                    style: ElevatedButton.styleFrom(
                      primary: Colors.red,
                      shape: const BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(5))),
                      minimumSize: Size(30,30),
                    ),
                    child: Text('Back',  style: TextStyle(fontSize: 30, color: Colors.white),),
                    onPressed: () {
                     //TODO GO TO PREV PAGE
                    }

                  )
                )
              ]
            ),
          ),
      );
    }
  }



  class TestPage extends StatefulWidget{
    Test createState()=> Test();
  }

  class Test extends State<TestPage> {
  int selection;

  @override
  void didChangeDependencies(){
    super.didChangeDependencies();
    selection = ModalRoute.of(context).settings.arguments;
  }



    Timer _timer;


    void _startTimer() {

      if (_timer != null) {
        _timer.cancel();
      }
      _timer = Timer.periodic(Duration(seconds: 1), (timer) {
        setState(() {
          if (selection > 0) {
            selection--;
          } else {
            _timer.cancel();
          }
        });
      });
    }

    @override
    Widget build(BuildContext context) {
      return MaterialApp(
        theme: new ThemeData(scaffoldBackgroundColor: const Color(0xFFFF)),
        home:
        Scaffold(
          appBar: AppBar(
              title: Text('Protxx App'),
              backgroundColor: Colors.red
          ),
          body: Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                (selection > 0)
                    ? Text("")
                    : Text(
                  "DONE!",
                  style: TextStyle(
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                    fontSize: 48,
                  ),
                ),
                Text(
                  '$selection',
                  style: TextStyle(
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                    fontSize: 48,
                  ),
                ),
                (selection > 0)
                      ? ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    primary: Colors.red,
                    shape: const BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(5))),
                    minimumSize: Size(30,30),
                  ),
                  onPressed: () => _startTimer(),
                  child: Text("Begin Test"),
                )
                      : ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    primary: Colors.red,
                    shape: const BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(5))),
                    minimumSize: Size(30,30),
                  ),
                  onPressed: () => _startTimer(),
                  child: Text("See Results"),
                )


              ],
            ),
          ),
        ),
      );
    }
  }


